{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nfunction useRecipeForm() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const handleEdit = async id => {\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"ingredients\", ingredients);\n    formData.append(\"instructions\", instructions);\n    formData.append(\"description\", description);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n    try {\n      await axios.put(`http://localhost:3000/api/recipes/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n    } catch (error) {\n      console.error(\"Error updating recipe:\", error);\n    }\n  };\n  return {\n    title,\n    ingredients,\n    instructions,\n    description,\n    image,\n    setTitle,\n    setIngredients,\n    setInstructions,\n    setDescription,\n    setImage,\n    handleEdit\n  };\n}\n_s(useRecipeForm, \"Mvo7jUD/AUoLfB1q+NGDGWeeeaI=\");\nexport default useRecipeForm;","map":{"version":3,"names":["useState","axios","useRecipeForm","_s","title","setTitle","ingredients","setIngredients","instructions","setInstructions","description","setDescription","image","setImage","handleEdit","id","formData","FormData","append","put","headers","error","console"],"sources":["/Users/jamesdavid/Desktop/my-recipe-app/frontend/src/hooks/useRecipeForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction useRecipeForm() {\n  const [title, setTitle] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleEdit = async (id) => {\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"ingredients\", ingredients);\n    formData.append(\"instructions\", instructions);\n    formData.append(\"description\", description);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.put(`http://localhost:3000/api/recipes/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n    } catch (error) {\n      console.error(\"Error updating recipe:\", error);\n    }\n  };\n\n  return {\n    title,\n    ingredients,\n    instructions,\n    description,\n    image,\n    setTitle,\n    setIngredients,\n    setInstructions,\n    setDescription,\n    setImage,\n    handleEdit,\n  };\n}\n\nexport default useRecipeForm;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEd,KAAK,CAAC;IAC/BY,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEZ,WAAW,CAAC;IAC3CU,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEV,YAAY,CAAC;IAC7CQ,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAER,WAAW,CAAC;IAC3C,IAAIE,KAAK,EAAE;MACTI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;IACjC;IAEA,IAAI;MACF,MAAMX,KAAK,CAACkB,GAAG,CAAC,qCAAqCJ,EAAE,EAAE,EAAEC,QAAQ,EAAE;QACnEI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,OAAO;IACLjB,KAAK;IACLE,WAAW;IACXE,YAAY;IACZE,WAAW;IACXE,KAAK;IACLP,QAAQ;IACRE,cAAc;IACdE,eAAe;IACfE,cAAc;IACdE,QAAQ;IACRC;EACF,CAAC;AACH;AAACX,EAAA,CAzCQD,aAAa;AA2CtB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}