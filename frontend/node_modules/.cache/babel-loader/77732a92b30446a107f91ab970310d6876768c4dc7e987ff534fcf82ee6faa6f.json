{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// function useRecipeForm() {\n//   const [title, setTitle] = useState(\"\");\n//   const [ingredients, setIngredients] = useState(\"\");\n//   const [instructions, setInstructions] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image, setImage] = useState(null);\n\n//   const handleEdit = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"ingredients\", ingredients);\n//     formData.append(\"instructions\", instructions);\n//     formData.append(\"description\", description);\n//     if (image) {\n//       formData.append(\"image\", image);\n//     }\n//     console.log(\"FormData entries:\", formData.entries());\n//     try {\n//       await axios.put(`http://localhost:3000/api/recipes/${id}`, formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n//     } catch (error) {\n//       console.error(\"Error updating recipe:\", error);\n//     }\n//   };\n\n//   return {\n//     title,\n//     ingredients,\n//     instructions,\n//     description,\n//     image,\n//     setTitle,\n//     setIngredients,\n//     setInstructions,\n//     setDescription,\n//     setImage,\n//     handleEdit,\n//   };\n// }\n\n// export default useRecipeForm;\nimport { useState } from \"react\";\nimport axios from \"axios\";\nfunction useRecipeForm() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"ingredients\", ingredients);\n    formData.append(\"instructions\", instructions);\n    formData.append(\"description\", description);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n    try {\n      const response = await axios.post(\"http://localhost:3000/api/recipes\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Recipe added successfully:\", response.data);\n      // Optionally, reset the form fields\n      setTitle(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n      setDescription(\"\");\n      setImage(null);\n    } catch (error) {\n      console.error(\"Error adding recipe:\", error);\n    }\n  };\n  return {\n    title,\n    ingredients,\n    instructions,\n    description,\n    setTitle,\n    setIngredients,\n    setInstructions,\n    setDescription,\n    setImage,\n    handleSubmit\n  };\n}\n_s(useRecipeForm, \"Mvo7jUD/AUoLfB1q+NGDGWeeeaI=\");\nexport default useRecipeForm;","map":{"version":3,"names":["useState","axios","useRecipeForm","_s","title","setTitle","ingredients","setIngredients","instructions","setInstructions","description","setDescription","image","setImage","handleSubmit","event","preventDefault","formData","FormData","append","response","post","headers","console","log","data","error"],"sources":["/Users/jamesdavid/Desktop/my-recipe-app/frontend/src/hooks/useRecipeForm.js"],"sourcesContent":["// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// function useRecipeForm() {\n//   const [title, setTitle] = useState(\"\");\n//   const [ingredients, setIngredients] = useState(\"\");\n//   const [instructions, setInstructions] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image, setImage] = useState(null);\n\n//   const handleEdit = async (id) => {\n//     const formData = new FormData();\n//     formData.append(\"title\", title);\n//     formData.append(\"ingredients\", ingredients);\n//     formData.append(\"instructions\", instructions);\n//     formData.append(\"description\", description);\n//     if (image) {\n//       formData.append(\"image\", image);\n//     }\n//     console.log(\"FormData entries:\", formData.entries());\n//     try {\n//       await axios.put(`http://localhost:3000/api/recipes/${id}`, formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n//     } catch (error) {\n//       console.error(\"Error updating recipe:\", error);\n//     }\n//   };\n\n//   return {\n//     title,\n//     ingredients,\n//     instructions,\n//     description,\n//     image,\n//     setTitle,\n//     setIngredients,\n//     setInstructions,\n//     setDescription,\n//     setImage,\n//     handleEdit,\n//   };\n// }\n\n// export default useRecipeForm;\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction useRecipeForm() {\n  const [title, setTitle] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"ingredients\", ingredients);\n    formData.append(\"instructions\", instructions);\n    formData.append(\"description\", description);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:3000/api/recipes\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      console.log(\"Recipe added successfully:\", response.data);\n      // Optionally, reset the form fields\n      setTitle(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n      setDescription(\"\");\n      setImage(null);\n    } catch (error) {\n      console.error(\"Error adding recipe:\", error);\n    }\n  };\n\n  return {\n    title,\n    ingredients,\n    instructions,\n    description,\n    setTitle,\n    setIngredients,\n    setInstructions,\n    setDescription,\n    setImage,\n    handleSubmit,\n  };\n}\n\nexport default useRecipeForm;\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,KAAK,CAAC;IAC/Ba,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEb,WAAW,CAAC;IAC3CW,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEX,YAAY,CAAC;IAC7CS,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAET,WAAW,CAAC;IAC3C,IAAIE,KAAK,EAAE;MACTK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC;IACjC;IAEA,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAC/B,mCAAmC,EACnCJ,QAAQ,EACR;QACEK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MACxD;MACApB,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;MAClBE,eAAe,CAAC,EAAE,CAAC;MACnBE,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,OAAO;IACLtB,KAAK;IACLE,WAAW;IACXE,YAAY;IACZE,WAAW;IACXL,QAAQ;IACRE,cAAc;IACdE,eAAe;IACfE,cAAc;IACdE,QAAQ;IACRC;EACF,CAAC;AACH;AAACX,EAAA,CApDQD,aAAa;AAsDtB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}